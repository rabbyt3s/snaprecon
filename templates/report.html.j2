<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>SnapRecon Report - {{ results.run_id }}</title>
    <style>
        :root {
            --bg-primary: #1a1a1a;
            --bg-secondary: #2d2d2d;
            --bg-card: #2d2d2d;
            --text-primary: #ffffff;
            --text-secondary: #cccccc;
            --text-muted: #999999;
            --border-color: #404040;
            --accent-color: #667eea;
            --accent-hover: #5a6fd8;
            --success-bg: #1e4d2b;
            --success-text: #d4edda;
            --error-bg: #4d1e1e;
            --error-text: #f8d7da;
            --warning-bg: #4d3e1e;
            --warning-text: #fff3cd;
            --shadow: 0 2px 10px rgba(0,0,0,0.3);
            --shadow-hover: 0 4px 20px rgba(0,0,0,0.4);
        }

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }
        
        body {
            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
            line-height: 1.6;
            color: var(--text-primary);
            background-color: var(--bg-primary);
            transition: all 0.3s ease;
        }
        
        .container {
            max-width: 1400px;
            margin: 0 auto;
            padding: 20px;
        }
        
        .header {
            background: linear-gradient(135deg, var(--accent-color) 0%, #764ba2 100%);
            color: white;
            padding: 30px;
            border-radius: 10px;
            margin-bottom: 30px;
            text-align: center;
        }
        
        .header h1 {
            font-size: 2.5em;
            margin-bottom: 10px;
        }
        
        .stats-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            gap: 20px;
            margin-bottom: 30px;
        }
        
        .stat-card {
            background: var(--bg-card);
            padding: 20px;
            border-radius: 8px;
            box-shadow: var(--shadow);
            text-align: center;
            border: 1px solid var(--border-color);
            transition: all 0.3s ease;
        }
        
        .stat-card:hover {
            box-shadow: var(--shadow-hover);
            transform: translateY(-2px);
        }
        
        .stat-number {
            font-size: 2em;
            font-weight: bold;
            color: var(--accent-color);
        }
        
        .stat-label {
            color: var(--text-secondary);
            margin-top: 5px;
        }
        
        .section {
            background: var(--bg-card);
            padding: 25px;
            border-radius: 8px;
            box-shadow: var(--shadow);
            margin-bottom: 30px;
            border: 1px solid var(--border-color);
        }
        
        .section h2 {
            color: var(--text-primary);
            margin-bottom: 20px;
            padding-bottom: 10px;
            border-bottom: 2px solid var(--accent-color);
        }
        
        .target-card {
            background: var(--bg-secondary);
            padding: 20px;
            border-radius: 8px;
            margin-bottom: 15px;
            border-left: 4px solid #28a745;
            border: 1px solid var(--border-color);
            transition: all 0.3s ease;
            min-width: 0; /* allow shrinking inside grid */
            overflow: hidden; /* prevent children overflow */
        }
        
        .target-card:hover {
            box-shadow: var(--shadow-hover);
        }
        
        .target-card.error {
            border-left-color: #dc3545;
            background: var(--error-bg);
        }
        
        .target-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 15px;
        }
        
        .target-host {
            font-size: 1.2em;
            font-weight: bold;
            color: var(--text-primary);
            overflow: hidden;
            text-overflow: ellipsis;
            white-space: nowrap;
        }
        
        .target-status {
            padding: 4px 12px;
            border-radius: 20px;
            font-size: 0.9em;
            font-weight: bold;
        }
        
        .status-success {
            background: var(--success-bg);
            color: var(--success-text);
        }
        
        .status-error {
            background: var(--error-bg);
            color: var(--error-text);
        }
        
        .target-details {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(0, 1fr));
            gap: 15px;
            margin-bottom: 15px;
        }
        
        .detail-item {
            display: flex;
            flex-direction: column;
        }
        
        .detail-label {
            font-weight: bold;
            color: var(--text-secondary);
            font-size: 0.9em;
            margin-bottom: 5px;
            overflow: hidden;
            text-overflow: ellipsis;
            white-space: nowrap;
        }
        
        .detail-value {
            color: var(--text-primary);
            overflow: hidden;
            text-overflow: ellipsis;
            white-space: nowrap;
            word-break: break-word;
        }
        
        .screenshot-container {
            margin-top: 15px;
            text-align: center;
        }
        
        .screenshot {
            max-width: 100%;
            height: auto;
            border-radius: 8px;
            box-shadow: var(--shadow);
            border: 1px solid var(--border-color);
            cursor: pointer;
            transition: transform 0.3s ease;
        }
        
        .screenshot:hover {
            transform: scale(1.02);
        }
        
        .screenshot-modal {
            display: none;
            position: fixed;
            z-index: 1000;
            left: 0;
            top: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0, 0, 0, 0.9);
            backdrop-filter: blur(5px);
        }
        
        .screenshot-modal-content {
            margin: auto;
            display: block;
            max-width: 90%;
            max-height: 90%;
            position: absolute;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
        }
        
        .screenshot-modal-close {
            position: absolute;
            top: 15px;
            right: 35px;
            color: #f1f1f1;
            font-size: 40px;
            font-weight: bold;
            cursor: pointer;
        }
        
        .screenshot-modal-close:hover {
            color: #bbb;
        }
        
        .tags {
            display: flex;
            flex-wrap: wrap;
            gap: 8px;
            margin-top: 10px;
        }
        
        .tag {
            background: var(--bg-primary);
            color: var(--text-secondary);
            padding: 4px 12px;
            border-radius: 20px;
            font-size: 0.8em;
            border: 1px solid var(--border-color);
        }
        
        .filters {
            display: flex;
            gap: 15px;
            margin-bottom: 20px;
            flex-wrap: wrap;
        }
        
        .filter-btn {
            padding: 8px 16px;
            border: none;
            border-radius: 20px;
            background: var(--accent-color);
            color: white;
            cursor: pointer;
            transition: background 0.3s;
        }
        
        .filter-btn:hover {
            background: var(--accent-hover);
        }
        
        .filter-btn.active {
            background: #28a745;
        }
        
        .search-box {
            padding: 8px 16px;
            border: 1px solid var(--border-color);
            border-radius: 20px;
            flex: 1;
            min-width: 200px;
            background: var(--bg-primary);
            color: var(--text-primary);
        }
        
        .search-box:focus {
            outline: none;
            border-color: var(--accent-color);
        }
        
        .hidden {
            display: none;
        }
        
        .no-screenshot {
            color: var(--text-muted);
            font-style: italic;
            text-align: center;
            padding: 20px;
            background: var(--bg-primary);
            border-radius: 8px;
            border: 1px dashed var(--border-color);
        }
        
        /* Interest accents */
        .interest-red { border-left-color: #e74c3c; }
        .interest-amber { border-left-color: #f39c12; }
        .interest-green { border-left-color: #2ecc71; }
        
        /* Grid container */
        #targetsGrid {
            display: grid;
            grid-template-columns: repeat(3, minmax(0, 1fr));
            gap: 12px;
        }
        
        /* Grid 3 readability: allow wrapping and full-width details */
        #targetsGrid[data-cols="3"] .target-details {
            grid-template-columns: 1fr;
        }
        #targetsGrid[data-cols="3"] .detail-value,
        #targetsGrid[data-cols="3"] .detail-label,
        #targetsGrid[data-cols="3"] .target-host {
            white-space: normal;
            text-overflow: unset;
            overflow: visible;
            word-break: break-word;
        }
        
        @media (max-width: 768px) {
            .container {
                padding: 10px;
            }
            
            .stats-grid {
                grid-template-columns: 1fr;
            }
            
            .target-details {
                grid-template-columns: 1fr;
            }
            
            .filters {
                flex-direction: column;
            }
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="header">
            <h1>🔍 SnapRecon Report</h1>
            <p>Run ID: {{ results.run_id }} | {{ results.timestamp.strftime('%Y-%m-%d %H:%M:%S UTC') }}</p>
            <p>Local analysis</p>
        </div>

        <div class="stats-grid">
            <div class="stat-card">
                <div class="stat-number">{{ results.targets|length }}</div>
                <div class="stat-label">Total Targets</div>
            </div>
            <div class="stat-card">
                <div class="stat-number">{{ success_count }}</div>
                <div class="stat-label">Successful Screenshots</div>
            </div>
            <div class="stat-card">
                <div class="stat-number">{{ error_count }}</div>
                <div class="stat-label">Failed Screenshots</div>
            </div>
            <div class="stat-card">
                <div class="stat-number">{{ results.targets|selectattr('analysis')|list|length }}</div>
                <div class="stat-label">Successful Analyses</div>
            </div>
        </div>

        {% if ports_map %}
        <div class="section">
            <h2>Open Ports</h2>
            {% if scanned_ports %}
            <p style="color: var(--text-secondary);">Scanned ports: {{ scanned_ports|join(', ') }}</p>
            {% endif %}
            <div class="target-details">
                <div class="detail-item" style="grid-column: 1 / -1;">
                    <table style="width:100%; border-collapse: collapse;">
                        <thead>
                            <tr>
                                <th style="text-align:left; padding:8px; border-bottom:1px solid var(--border-color);">Host</th>
                                <th style="text-align:left; padding:8px; border-bottom:1px solid var(--border-color);">Open ports</th>
                            </tr>
                        </thead>
                        <tbody>
                        {% for host, ports in ports_map|dictsort %}
                            <tr>
                                <td style="padding:8px; border-bottom:1px solid var(--border-color);">{{ host }}</td>
                                <td style="padding:8px; border-bottom:1px solid var(--border-color);">{{ ports|join(', ') if ports else '—' }}</td>
                            </tr>
                        {% endfor %}
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
        {% endif %}

        <div class="section">
            <h2>Configuration</h2>
            <div class="target-details">
                <div class="detail-item">
                    <div class="detail-label">Output Directory</div>
                    <div class="detail-value">{{ config.run_dir }}</div>
                </div>
                <div class="detail-item">
                    <div class="detail-label">Concurrency</div>
                    <div class="detail-value">{{ config.concurrency }}</div>
                </div>
                <div class="detail-item">
                    <div class="detail-label">Timeout</div>
                    <div class="detail-value">{{ config.timeout_ms }}ms</div>
                </div>
                <div class="detail-item">
                    <div class="detail-label">Full Page Screenshots</div>
                    <div class="detail-value">{{ "Yes" if config.fullpage else "No" }}</div>
                </div>
            </div>
        </div>

        <div class="section">
            <h2>Targets</h2>
            
            <div class="filters">
                <button class="filter-btn active" onclick="filterTargets('all')">All ({{ results.targets|length }})</button>
                <button class="filter-btn" onclick="filterTargets('success')">Success ({{ success_count }})</button>
                <button class="filter-btn" onclick="filterTargets('error')">Errors ({{ error_count }})</button>
                <select class="filter-btn" id="gridSize" onchange="changeGrid(this.value)">
                    <option value="3">Grid: 3</option>
                    <option value="4">Grid: 4</option>
                    <option value="5">Grid: 5</option>
                    <option value="8">Grid: 8</option>
                    <option value="10">Grid: 10</option>
                </select>
                <input type="text" class="search-box" placeholder="Search targets..." onkeyup="searchTargets(this.value)">
            </div>

            <div id="targetsGrid" data-cols="3">
            {% for target in results.targets %}
            {% set interest_class = '' %}
            {% if target.llm_result %}
                {% if target.llm_result.confidence >= 0.85 %}
                    {% set interest_class = 'interest-red' %}
                {% elif target.llm_result.confidence >= 0.6 %}
                    {% set interest_class = 'interest-amber' %}
                {% else %}
                    {% set interest_class = 'interest-green' %}
                {% endif %}
            {% endif %}
            <div class="target-card {% if target.error %}error{% endif %} {{ interest_class }}" data-status="{% if target.error %}error{% else %}success{% endif %}" data-host="{{ target.host|lower }}">
                <div class="target-header">
                    <div class="target-host">{{ target.host }}</div>
                    <div class="target-status {% if target.error %}status-error{% else %}status-success{% endif %}">
                        {% if target.error %}Error{% else %}Success{% endif %}
                    </div>
                </div>
                
                <div class="target-details">
                    <div class="detail-item">
                        <div class="detail-label">Domain</div>
                        <div class="detail-value">{{ target.domain }}</div>
                    </div>
                    <div class="detail-item">
                        <div class="detail-label">Subdomain</div>
                        <div class="detail-value">{{ target.subdomain or "None" }}</div>
                    </div>
                    {% if target.metadata %}
                    <div class="detail-item">
                        <div class="detail-label">Title</div>
                        <div class="detail-value">{{ target.metadata.title or "N/A" }}</div>
                    </div>
                    <div class="detail-item">
                        <div class="detail-label">Status Code</div>
                        <div class="detail-value">{{ target.metadata.status_code or "N/A" }}</div>
                    </div>
                    <div class="detail-item">
                        <div class="detail-label">Final URL</div>
                        <div class="detail-value">{{ target.metadata.final_url or "N/A" }}</div>
                    </div>
                    <div class="detail-item">
                        <div class="detail-label">Screenshot Size</div>
                        <div class="detail-value">{{ target.metadata.screenshot_size or "N/A" }} bytes</div>
                    </div>
                    {% endif %}
                </div>

                {% if target.error %}
                <div class="target-details">
                    <div class="detail-item">
                        <div class="detail-label">Error Message</div>
                        <div class="detail-value">{{ target.error.message }}</div>
                    </div>
                    <div class="detail-item">
                        <div class="detail-label">Error Code</div>
                        <div class="detail-value">{{ target.error.code or "N/A" }}</div>
                    </div>
                </div>
                {% endif %}

                {% if target.llm_result %}
                <div class="target-details">
                    <div class="detail-item">
                        <div class="detail-label">Summary</div>
                        <div class="detail-value">{{ target.llm_result.summary }}</div>
                    </div>
                </div>
                
                {% if target.llm_result.tags %}
                <div class="tags">
                    {% for tag in target.llm_result.tags %}
                    <span class="tag">{{ tag }}</span>
                    {% endfor %}
                </div>
                {% endif %}
                {% endif %}

                <!-- Screenshot Display -->
                {% if target.metadata and target.metadata.screenshot_path %}
                <div class="screenshot-container">
                    <img src="screenshots/{{ target.metadata.screenshot_path.name if target.metadata.screenshot_path else '' }}" 
                         alt="Screenshot of {{ target.host }}" 
                         class="screenshot"
                         style="max-width: 100%; height: auto; object-fit: contain;"
                         onclick="openScreenshotModal(this.src, '{{ target.host }}')"
                         title="Click to view full size">
                </div>
                {% elif not target.error %}
                <div class="no-screenshot">
                    No screenshot available
                </div>
                {% endif %}
            </div>
            {% endfor %}
            </div>
        </div>
    </div>

    <!-- Screenshot Modal -->
    <div id="screenshotModal" class="screenshot-modal">
        <span class="screenshot-modal-close" onclick="closeScreenshotModal()">&times;</span>
        <img class="screenshot-modal-content" id="modalImage">
        <div id="modalCaption" style="text-align: center; color: white; margin-top: 20px;"></div>
    </div>

    <script>
        // Screenshot modal functions
        function openScreenshotModal(src, hostname) {
            const modal = document.getElementById('screenshotModal');
            const modalImg = document.getElementById('modalImage');
            const caption = document.getElementById('modalCaption');
            
            modal.style.display = "block";
            modalImg.src = src;
            caption.textContent = `Screenshot of ${hostname}`;
        }
        
        function closeScreenshotModal() {
            document.getElementById('screenshotModal').style.display = "none";
        }
        
        // Close modal when clicking outside
        window.onclick = function(event) {
            const modal = document.getElementById('screenshotModal');
            if (event.target === modal) {
                modal.style.display = "none";
            }
        }
        
        // Filter functions
        function filterTargets(status) {
            const targets = document.querySelectorAll('.target-card');
            const buttons = document.querySelectorAll('.filter-btn');
            
            // Update active button
            buttons.forEach(btn => btn.classList.remove('active'));
            event.target.classList.add('active');
            
            targets.forEach(target => {
                if (status === 'all' || target.dataset.status === status) {
                    target.classList.remove('hidden');
                } else {
                    target.classList.add('hidden');
                }
            });
        }
        
        function searchTargets(query) {
            const targets = document.querySelectorAll('.target-card');
            const searchTerm = query.toLowerCase();
            
            targets.forEach(target => {
                const host = target.dataset.host;
                if (host.includes(searchTerm)) {
                    target.classList.remove('hidden');
                } else {
                    target.classList.add('hidden');
                }
            });
        }

        function changeGrid(n) {
            const grid = document.getElementById('targetsGrid');
            const cols = parseInt(n, 10) || 3;
            grid.style.gridTemplateColumns = `repeat(${cols}, minmax(0, 1fr))`;
            grid.setAttribute('data-cols', String(cols));
        }
    </script>
</body>
</html>
